"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = handler;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const domain_1 = require("@grid-wolf/shared/domain");
const utils_1 = require("@grid-wolf/shared/utils");
const jsonwebtoken_1 = require("jsonwebtoken");
const aws_xray_sdk_1 = require("aws-xray-sdk");
const client = (0, aws_xray_sdk_1.captureAWSv3Client)(new client_dynamodb_1.DynamoDBClient());
let TableName;
const parseAuthToken = (event) => {
    // Auth header is always present because requests are not accepted without it.
    const authHeader = event.headers.Authorization;
    const token = authHeader.replace(/^Bearer\s/, '');
    return (0, jsonwebtoken_1.decode)(token);
};
const handlePutGameOperation = async (event) => {
    const gameDTO = JSON.parse(event.body);
    const { username } = parseAuthToken(event);
    if (username !== gameDTO.userId) {
        console.warn(`Username mismatch: auth user is ${username}, but request was for ${gameDTO.userId}`);
        return {
            statusCode: 400,
            message: 'bad request'
        };
    }
    const command = new client_dynamodb_1.PutItemCommand({
        TableName,
        Item: (0, domain_1.marshallToDAO)(gameDTO)
    });
    return client.send(command).then(() => ({
        statusCode: 202,
        message: 'accepted'
    }));
};
const handleGetGameOperation = async (event) => {
    const gameId = event.pathParameters['gameId'];
    const { username } = parseAuthToken(event);
    const command = new client_dynamodb_1.GetItemCommand({
        TableName,
        Key: {
            pk: { S: `user#${username}` },
            sk: { S: `game#${gameId}` }
        }
    });
    const response = await client.send(command);
    return {
        statusCode: 200,
        body: JSON.stringify((0, domain_1.marshallToDTO)(response.Item))
    };
};
const handleGetGamesOperation = async (event) => {
    const { username } = parseAuthToken(event);
    const command = new client_dynamodb_1.QueryCommand({
        TableName,
        ExpressionAttributeValues: {
            ':pk': { S: `user#${username}` }
        },
        KeyConditionExpression: 'pk = :pk'
    });
    const response = await client.send(command);
    return {
        statusCode: 200,
        body: JSON.stringify(response.Items.map(domain_1.marshallToDTO))
    };
};
async function handler(event) {
    TableName = process.env[utils_1.EnvironmentVariableName.DATA_TABLE_NAME];
    const { path, httpMethod } = event.requestContext;
    if (path === '/game' && httpMethod === 'PUT') {
        return handlePutGameOperation(event);
    }
    else if (path === '/game' && httpMethod === 'GET') {
        return handleGetGameOperation(event);
    }
    else if (path === '/games' && httpMethod === 'GET') {
        return handleGetGamesOperation(event);
    }
    return null;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQTJFQSwwQkFXQztBQXRGRCw4REFBd0c7QUFDeEcscURBQTBGO0FBQzFGLG1EQUFrRTtBQUVsRSwrQ0FBa0Q7QUFDbEQsK0NBQWtEO0FBRWxELE1BQU0sTUFBTSxHQUFHLElBQUEsaUNBQWtCLEVBQUMsSUFBSSxnQ0FBYyxFQUFFLENBQUMsQ0FBQztBQUN4RCxJQUFJLFNBQWlCLENBQUM7QUFFdEIsTUFBTSxjQUFjLEdBQUcsQ0FBQyxLQUEyQixFQUFFLEVBQUU7SUFDckQsOEVBQThFO0lBQzlFLE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsYUFBYyxDQUFDO0lBQ2hELE1BQU0sS0FBSyxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2xELE9BQU8sSUFBQSxxQkFBTSxFQUFDLEtBQUssQ0FBZSxDQUFDO0FBQ3JDLENBQUMsQ0FBQTtBQUVELE1BQU0sc0JBQXNCLEdBQUcsS0FBSyxFQUFFLEtBQTJCLEVBQUUsRUFBRTtJQUNuRSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFLLENBQVksQ0FBQztJQUNuRCxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTNDLElBQUksUUFBUSxLQUFLLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQyxPQUFPLENBQUMsSUFBSSxDQUNWLG1DQUFtQyxRQUFRLHlCQUF5QixPQUFPLENBQUMsTUFBTSxFQUFFLENBQ3JGLENBQUE7UUFDRCxPQUFPO1lBQ0wsVUFBVSxFQUFFLEdBQUc7WUFDZixPQUFPLEVBQUUsYUFBYTtTQUN2QixDQUFDO0lBQ0osQ0FBQztJQUNELE1BQU0sT0FBTyxHQUFHLElBQUksZ0NBQWMsQ0FBQztRQUNqQyxTQUFTO1FBQ1QsSUFBSSxFQUFFLElBQUEsc0JBQWEsRUFBQyxPQUFPLENBQUM7S0FDN0IsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3RDLFVBQVUsRUFBRSxHQUFHO1FBQ2YsT0FBTyxFQUFFLFVBQVU7S0FDcEIsQ0FBQyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUE7QUFFRCxNQUFNLHNCQUFzQixHQUFHLEtBQUssRUFBRSxLQUEyQixFQUFFLEVBQUU7SUFDbkUsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLGNBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTNDLE1BQU0sT0FBTyxHQUFHLElBQUksZ0NBQWMsQ0FBQztRQUNqQyxTQUFTO1FBQ1QsR0FBRyxFQUFFO1lBQ0gsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsUUFBUSxFQUFFLEVBQUU7WUFDN0IsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsTUFBTSxFQUFFLEVBQUU7U0FDNUI7S0FDRixDQUFDLENBQUM7SUFDSCxNQUFNLFFBQVEsR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUMsT0FBTztRQUNMLFVBQVUsRUFBRSxHQUFHO1FBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBQSxzQkFBYSxFQUFDLFFBQVEsQ0FBQyxJQUFzQixDQUFDLENBQUM7S0FDckUsQ0FBQztBQUNKLENBQUMsQ0FBQTtBQUVELE1BQU0sdUJBQXVCLEdBQUcsS0FBSyxFQUFFLEtBQTJCLEVBQUUsRUFBRTtJQUNwRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTNDLE1BQU0sT0FBTyxHQUFHLElBQUksOEJBQVksQ0FBQztRQUMvQixTQUFTO1FBQ1QseUJBQXlCLEVBQUU7WUFDekIsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsUUFBUSxFQUFFLEVBQUM7U0FDaEM7UUFDRCxzQkFBc0IsRUFBRSxVQUFVO0tBQ25DLENBQUMsQ0FBQztJQUNILE1BQU0sUUFBUSxHQUFHLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1QyxPQUFPO1FBQ0wsVUFBVSxFQUFFLEdBQUc7UUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBRSxRQUFRLENBQUMsS0FBMEIsQ0FBQyxHQUFHLENBQUMsc0JBQWEsQ0FBQyxDQUFDO0tBQzlFLENBQUE7QUFDSCxDQUFDLENBQUE7QUFFTSxLQUFLLFVBQVUsT0FBTyxDQUFDLEtBQTJCO0lBQ3ZELFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUF1QixDQUFDLGVBQWUsQ0FBRSxDQUFDO0lBQ2xFLE1BQU0sRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDLGNBQWMsQ0FBQztJQUNsRCxJQUFJLElBQUksS0FBSyxPQUFPLElBQUksVUFBVSxLQUFLLEtBQUssRUFBRSxDQUFDO1FBQzdDLE9BQU8sc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsQ0FBQztTQUFNLElBQUksSUFBSSxLQUFLLE9BQU8sSUFBSSxVQUFVLEtBQUssS0FBSyxFQUFFLENBQUM7UUFDcEQsT0FBTyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QyxDQUFDO1NBQU0sSUFBSSxJQUFJLEtBQUssUUFBUSxJQUFJLFVBQVUsS0FBSyxLQUFLLEVBQUUsQ0FBQztRQUNyRCxPQUFPLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdXRJdGVtQ29tbWFuZCwgR2V0SXRlbUNvbW1hbmQsIFF1ZXJ5Q29tbWFuZCwgRHluYW1vREJDbGllbnQgfSBmcm9tIFwiQGF3cy1zZGsvY2xpZW50LWR5bmFtb2RiXCI7XG5pbXBvcnQgeyBHYW1lRFRPLCBHYW1lREFPLCBtYXJzaGFsbFRvREFPLCBtYXJzaGFsbFRvRFRPIH0gZnJvbSBcIkBncmlkLXdvbGYvc2hhcmVkL2RvbWFpblwiO1xuaW1wb3J0IHsgRW52aXJvbm1lbnRWYXJpYWJsZU5hbWUgfSBmcm9tIFwiQGdyaWQtd29sZi9zaGFyZWQvdXRpbHNcIjtcbmltcG9ydCB7IEFQSUdhdGV3YXlQcm94eUV2ZW50IH0gZnJvbSBcImF3cy1sYW1iZGFcIjtcbmltcG9ydCB7IGRlY29kZSwgSnd0UGF5bG9hZCB9IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgeyBjYXB0dXJlQVdTdjNDbGllbnQgfSBmcm9tICdhd3MteHJheS1zZGsnO1xuXG5jb25zdCBjbGllbnQgPSBjYXB0dXJlQVdTdjNDbGllbnQobmV3IER5bmFtb0RCQ2xpZW50KCkpO1xubGV0IFRhYmxlTmFtZTogc3RyaW5nO1xuXG5jb25zdCBwYXJzZUF1dGhUb2tlbiA9IChldmVudDogQVBJR2F0ZXdheVByb3h5RXZlbnQpID0+IHtcbiAgLy8gQXV0aCBoZWFkZXIgaXMgYWx3YXlzIHByZXNlbnQgYmVjYXVzZSByZXF1ZXN0cyBhcmUgbm90IGFjY2VwdGVkIHdpdGhvdXQgaXQuXG4gIGNvbnN0IGF1dGhIZWFkZXIgPSBldmVudC5oZWFkZXJzLkF1dGhvcml6YXRpb24hO1xuICBjb25zdCB0b2tlbiA9IGF1dGhIZWFkZXIucmVwbGFjZSgvXkJlYXJlclxccy8sICcnKTtcbiAgcmV0dXJuIGRlY29kZSh0b2tlbikgYXMgSnd0UGF5bG9hZDtcbn1cblxuY29uc3QgaGFuZGxlUHV0R2FtZU9wZXJhdGlvbiA9IGFzeW5jIChldmVudDogQVBJR2F0ZXdheVByb3h5RXZlbnQpID0+IHtcbiAgY29uc3QgZ2FtZURUTyA9IEpTT04ucGFyc2UoZXZlbnQuYm9keSEpIGFzIEdhbWVEVE87XG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHBhcnNlQXV0aFRva2VuKGV2ZW50KTtcblxuICBpZiAodXNlcm5hbWUgIT09IGdhbWVEVE8udXNlcklkKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgYFVzZXJuYW1lIG1pc21hdGNoOiBhdXRoIHVzZXIgaXMgJHt1c2VybmFtZX0sIGJ1dCByZXF1ZXN0IHdhcyBmb3IgJHtnYW1lRFRPLnVzZXJJZH1gXG4gICAgKVxuICAgIHJldHVybiB7XG4gICAgICBzdGF0dXNDb2RlOiA0MDAsXG4gICAgICBtZXNzYWdlOiAnYmFkIHJlcXVlc3QnXG4gICAgfTtcbiAgfVxuICBjb25zdCBjb21tYW5kID0gbmV3IFB1dEl0ZW1Db21tYW5kKHtcbiAgICBUYWJsZU5hbWUsXG4gICAgSXRlbTogbWFyc2hhbGxUb0RBTyhnYW1lRFRPKVxuICB9KTtcbiAgcmV0dXJuIGNsaWVudC5zZW5kKGNvbW1hbmQpLnRoZW4oKCkgPT4gKHtcbiAgICBzdGF0dXNDb2RlOiAyMDIsXG4gICAgbWVzc2FnZTogJ2FjY2VwdGVkJ1xuICB9KSk7XG59XG5cbmNvbnN0IGhhbmRsZUdldEdhbWVPcGVyYXRpb24gPSBhc3luYyAoZXZlbnQ6IEFQSUdhdGV3YXlQcm94eUV2ZW50KSA9PiB7XG4gIGNvbnN0IGdhbWVJZCA9IGV2ZW50LnBhdGhQYXJhbWV0ZXJzIVsnZ2FtZUlkJ107XG4gIGNvbnN0IHsgdXNlcm5hbWUgfSA9IHBhcnNlQXV0aFRva2VuKGV2ZW50KTtcblxuICBjb25zdCBjb21tYW5kID0gbmV3IEdldEl0ZW1Db21tYW5kKHtcbiAgICBUYWJsZU5hbWUsXG4gICAgS2V5OiB7XG4gICAgICBwazogeyBTOiBgdXNlciMke3VzZXJuYW1lfWAgfSxcbiAgICAgIHNrOiB7IFM6IGBnYW1lIyR7Z2FtZUlkfWAgfVxuICAgIH1cbiAgfSk7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LnNlbmQoY29tbWFuZCk7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzQ29kZTogMjAwLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG1hcnNoYWxsVG9EVE8ocmVzcG9uc2UuSXRlbSBhcyBhbnkgYXMgR2FtZURBTykpXG4gIH07XG59XG5cbmNvbnN0IGhhbmRsZUdldEdhbWVzT3BlcmF0aW9uID0gYXN5bmMgKGV2ZW50OiBBUElHYXRld2F5UHJveHlFdmVudCkgPT4ge1xuICBjb25zdCB7IHVzZXJuYW1lIH0gPSBwYXJzZUF1dGhUb2tlbihldmVudCk7XG5cbiAgY29uc3QgY29tbWFuZCA9IG5ldyBRdWVyeUNvbW1hbmQoe1xuICAgIFRhYmxlTmFtZSxcbiAgICBFeHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7XG4gICAgICAnOnBrJzogeyBTOiBgdXNlciMke3VzZXJuYW1lfWB9XG4gICAgfSxcbiAgICBLZXlDb25kaXRpb25FeHByZXNzaW9uOiAncGsgPSA6cGsnXG4gIH0pO1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5zZW5kKGNvbW1hbmQpO1xuICByZXR1cm4ge1xuICAgIHN0YXR1c0NvZGU6IDIwMCxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSgocmVzcG9uc2UuSXRlbXMgYXMgYW55IGFzIEdhbWVEQU9bXSkubWFwKG1hcnNoYWxsVG9EVE8pKVxuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKGV2ZW50OiBBUElHYXRld2F5UHJveHlFdmVudCkge1xuICBUYWJsZU5hbWUgPSBwcm9jZXNzLmVudltFbnZpcm9ubWVudFZhcmlhYmxlTmFtZS5EQVRBX1RBQkxFX05BTUVdITtcbiAgY29uc3QgeyBwYXRoLCBodHRwTWV0aG9kIH0gPSBldmVudC5yZXF1ZXN0Q29udGV4dDtcbiAgaWYgKHBhdGggPT09ICcvZ2FtZScgJiYgaHR0cE1ldGhvZCA9PT0gJ1BVVCcpIHtcbiAgICByZXR1cm4gaGFuZGxlUHV0R2FtZU9wZXJhdGlvbihldmVudCk7XG4gIH0gZWxzZSBpZiAocGF0aCA9PT0gJy9nYW1lJyAmJiBodHRwTWV0aG9kID09PSAnR0VUJykge1xuICAgIHJldHVybiBoYW5kbGVHZXRHYW1lT3BlcmF0aW9uKGV2ZW50KTtcbiAgfSBlbHNlIGlmIChwYXRoID09PSAnL2dhbWVzJyAmJiBodHRwTWV0aG9kID09PSAnR0VUJykge1xuICAgIHJldHVybiBoYW5kbGVHZXRHYW1lc09wZXJhdGlvbihldmVudCk7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG4iXX0=